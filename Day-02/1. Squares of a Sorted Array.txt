//Link ---> https://leetcode.com/problems/squares-of-a-sorted-array/


//Solution 1 -
    vector<int> sortedSquares(vector<int>& nums) {
        int n=nums.size();
        for(int i=0;i<n;i++){
            nums[i] = nums[i]*nums[i];
        }
        sort(nums.begin(),nums.end());
        return nums;
    }

//Time Complexity => O(n.log(n))


//Solution 2 -
    vector<int> sortedSquares(vector<int>& nums) {
        int n=nums.size();
        multiset<int> temp;
        for(int i=0;i<n;i++){
            temp.insert(nums[i]*nums[i]);
        }
        nums.clear();
        for(auto it: temp){
            nums.push_back(it);
        }
        return nums;
    }

//Time Complexity => O(n)
//Space Complexity => O(n)